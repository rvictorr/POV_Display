#include "symbol.h"

#define SIZE(x) sizeof(x)/sizeof(x[0])

namespace Symbols
{
    const uint16_t A[] = 
	{	
		0b0000000001,
		0b0000000011,
		0b0000000110,
		0b0000001100,
		0b0000011000,
		0b0000110000,
		0b0001110000,
		0b0011010000,
		0b0110010000,
		0b1100010000,
		0b0110010000,
		0b0011010000,
		0b0001110000,
		0b0000110000,
		0b0000011000,
		0b0000001100,
		0b0000000110,
		0b0000000011,
		0b0000000001
    };

	const uint16_t B[] = 
	{	
		0b1111111111,
		0b1111111111,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1101110011,
		0b0111011110,
		0b0010001100
    };

	const uint16_t C[] = 
	{	
		0b0000110000,
		0b0001111000,
		0b0011001100,
		0b0010000100,
		0b0100000010,
		0b0100000010,
		0b0100000010,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b0100000010,
		0b0100000010
    };

	const uint16_t D[] = 
	{	
		0b1111111111,
		0b1111111111,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b1100000011,
		0b0100000010,
		0b0110000110,
		0b0011001100,
		0b0001111000,
		0b0000110000
    };

	const uint16_t E[] = 
	{	
		0b1111111111,
		0b1111111111,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001
    };

	const uint16_t F[] = 
	{	
		0b1111111111,
		0b1111111111,
		0b1000100000,
		0b1000100000,
		0b1000100000,
		0b1000100000,
		0b1000100000,
		0b1000100000,
		0b1000100000,
		0b1000100000,
		0b1000100000,
		0b1000100000,
		0b1000100000,
		0b1000100000
    };

	const uint16_t G[] = 
	{	
		0b0000110000,
		0b0001111000,
		0b0011001100,
		0b0010000100,
		0b0100000010,
		0b0100000010,
		0b0100000010,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b1000010001,
		0b1000010001,
		0b1000010001,
		0b1000010001,
		0b1000010001,
		0b1000010001,
		0b0100001110,
		0b0100001110
    };

	const uint16_t H[] = 
	{	
		0b1111111111,
		0b1111111111,
		0b0000100000,
		0b0000100000,
		0b0000100000,
		0b0000100000,
		0b0000100000,
		0b0000100000,
		0b0000100000,
		0b0000100000,
		0b0000100000,
		0b0000100000,
		0b0000100000,
		0b0000100000,
		0b0000100000,
		0b1111111111,
		0b1111111111
    };

	const uint16_t I[] = 
	{	
		0b1111111111,
		0b1111111111,
		0b1111111111
    };

	const uint16_t J[] = 
	{	
		0b0000000100,
		0b0000000110,
		0b0000000010,
		0b0000000001,
		0b0000000001,
		0b0000000001,
		0b0000000011,
		0b1111111110,
		0b1111111100
    };

	const uint16_t K[] = 
	{	
		0b1111111111,
		0b1111111111,
		0b0000110000,
		0b0001111000,
		0b0001001000,
		0b0011001100,
		0b0010000100,
		0b0110000110,
		0b0100000010,
		0b1100000011,
		0b1000000001,
		0b1000000001
    };

	const uint16_t L[] = 
	{	
		0b1111111111,
		0b1111111111,
		0b0000000001,
		0b0000000001,
		0b0000000001,
		0b0000000001,
		0b0000000001,
		0b0000000001,
		0b0000000001,
		0b0000000001,
		0b0000000001,
		0b0000000001,
		0b0000000001,
		0b0000000001
    };

	const uint16_t M[] = 
	{	
		0b1111111111,
		0b0111111111,
		0b0110000000,
		0b0010000000,
		0b0001000000,
		0b0001000000,
		0b0000100000,
		0b0000010000,
		0b0000001000,
		0b0000010000,
		0b0000100000,
		0b0001000000,
		0b0001000000,
		0b0010000000,
		0b0110000000,
		0b0111111111,
		0b1111111111
    };

	const uint16_t N[] = 
	{	
		0b1111111111,
		0b1111111111,
		0b1000000000,
		0b1100000000,
		0b0110000000,
		0b0011000000,
		0b0001100000,
		0b0000110000,
		0b0000011000,
		0b0000001100,
		0b0000000110,
		0b0000000011,
		0b1111111111,
		0b1111111111
    };

	const uint16_t O[] = 
	{	
		0b0000110000,
		0b0001111000,
		0b0011001100,
		0b0010000100,
		0b0100000010,
		0b0100000010,
		0b0100000010,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b1000000001,
		0b0100000010,
		0b0100000010,
		0b0100000010,
		0b0010000100,
		0b0011001100,
		0b0001111000,
		0b0000110000
    };

	const uint16_t P[] = 
	{	
		0b1111111111,
		0b1111111111,
		0b1000100000,
		0b1000100000,
		0b1000100000,
		0b1000100000,
		0b1000100000,
		0b1000100000,
		0b1000100000,
		0b1000100000,
		0b1101100000,
		0b0111000000,
		0b0111000000,
		0b0010000000
    };

// TODO implement
// 	const uint16_t Q[] = 
// 	{	
// 		0b0000000001,
// 0b0000000011,
// 0b0000000110,
// 0b0000001100,
// 0b0000011000,
// 0b0000110000,
// 0b0001110000,
// 0b0011010000,
// 0b0110010000,
// 0b1100010000,
// 0b0110010000,
// 0b0011010000,
// 0b0001110000,
// 0b0000110000,
// 0b0000011000,
// 0b0000001100,
// 0b0000000110,
// 0b0000000011,
// 0b0000000001
//     };

	const uint16_t R[] = 
	{	
		0b1111111111,
		0b1111111111,
		0b1000100000,
		0b1000100000,
		0b1000100000,
		0b1000100000,
		0b1000100000,
		0b1000110000,
		0b1000111000,
		0b1000111100,
		0b1101101110,
		0b0111000111,
		0b0111000011,
		0b0010000001
    };

	const uint16_t S[] = 
	{	
		0b0010000000,
		0b0111000010,
		0b1101100010,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000100001,
		0b1000110001,
		0b0100010011,
		0b0100011110,
		0b0000001100
    };

	const uint16_t T[] = 
	{	
		0b1000000000,
		0b1000000000,
		0b1000000000,
		0b1000000000,
		0b1000000000,
		0b1000000000,
		0b1000000000,
		0b1000000000,
		0b1000000000,
		0b1111111111,
		0b1111111111,
		0b1111111111,
		0b1000000000,
		0b1000000000,
		0b1000000000,
		0b1000000000,
		0b1000000000,
		0b1000000000,
		0b1000000000,
		0b1000000000,
		0b1000000000
    };

	const uint16_t U[] = 
	{	
		0b1111111000,
		0b1111111100,
		0b0000000110,
		0b0000000010,
		0b0000000001,
		0b0000000001,
		0b0000000001,
		0b0000000001,
		0b0000000001,
		0b0000000001,
		0b0000000010,
		0b0000000110,
		0b1111111100,
		0b1111111000
    };

	const uint16_t V[] = 
	{	
		0b1000000000,
		0b1100000000,
		0b0110000000,
		0b0011000000,
		0b0001100000,
		0b0000110000,
		0b0000011000,
		0b0000001100,
		0b0000000110,
		0b0000000011,
		0b0000000110,
		0b0000001100,
		0b0000011000,
		0b0000110000,
		0b0001100000,
		0b0011000000,
		0b0110000000,
		0b1100000000,
		0b1000000000
    };

	const uint16_t W[] = 
	{	
		0b1000000000,
		0b1100000000,
		0b0110000000,
		0b0011000000,
		0b0001100000,
		0b0000110000,
		0b0000011000,
		0b0000001100,
		0b0000000110,
		0b0000000011,
		0b0000000110,
		0b0000001100,
		0b0000011000,
		0b0000110000,
		0b0001100000,
		0b0011000000,
		0b0110000000,
		0b1100000000,
		0b1000000000,
		0b1100000000,
		0b0110000000,
		0b0011000000,
		0b0001100000,
		0b0000110000,
		0b0000011000,
		0b0000001100,
		0b0000000110,
		0b0000000011,
		0b0000000110,
		0b0000001100,
		0b0000011000,
		0b0000110000,
		0b0001100000,
		0b0011000000,
		0b0110000000,
		0b1100000000,
		0b1000000000
    };

	const uint16_t X[] = 
	{	
		0b0000000001,
		0b1000000001,
		0b1000000010,
		0b0100000010,
		0b0100000100,
		0b0010000100,
		0b0010001000,
		0b0001001000,
		0b0001010000,
		0b000010000,
		0b0000100000,
		0b0001010000,
		0b0001001000,
		0b0010001000,
		0b0010000100,
		0b0100000100,
		0b0100000010,
		0b1000000010,
		0b1000000001,
		0b0000000001
    };

// TODO implement

// 	const uint16_t Y[] = 
// 	{	
// 		0b0000000001,
// 0b0000000011,
// 0b0000000110,
// 0b0000001100,
// 0b0000011000,
// 0b0000110000,
// 0b0001110000,
// 0b0011010000,
// 0b0110010000,
// 0b1100010000,
// 0b0110010000,
// 0b0011010000,
// 0b0001110000,
// 0b0000110000,
// 0b0000011000,
// 0b0000001100,
// 0b0000000110,
// 0b0000000011,
// 0b0000000001
//     };

// TODO implement

// 	const uint16_t Z[] = 
// 	{	
// 		0b0000000001,
// 0b0000000011,
// 0b0000000110,
// 0b0000001100,
// 0b0000011000,
// 0b0000110000,
// 0b0001110000,
// 0b0011010000,
// 0b0110010000,
// 0b1100010000,
// 0b0110010000,
// 0b0011010000,
// 0b0001110000,
// 0b0000110000,
// 0b0000011000,
// 0b0000001100,
// 0b0000000110,
// 0b0000000011,
// 0b0000000001
//     };

	const Symbol symA(A, SIZE(A), 10);
	const Symbol symB(B, SIZE(B), 10);
	const Symbol symC(C, SIZE(C), 10);
	const Symbol symD(D, SIZE(D), 10);
	const Symbol symE(E, SIZE(E), 10);
	const Symbol symF(F, SIZE(F), 10);
	const Symbol symG(G, SIZE(G), 10);
	const Symbol symH(H, SIZE(H), 10);
	const Symbol symI(I, SIZE(I), 10);
	const Symbol symJ(J, SIZE(J), 10);
	const Symbol symK(K, SIZE(K), 10);
	const Symbol symL(L, SIZE(L), 10);
	const Symbol symM(M, SIZE(M), 10);
	const Symbol symN(N, SIZE(N), 10);
	const Symbol symO(O, SIZE(O), 10);
	const Symbol symP(P, SIZE(P), 10);
	//const Symbol symQ(Q, SIZE(Q), 10);
	const Symbol symR(R, SIZE(R), 10);
	const Symbol symS(S, SIZE(S), 10);
	const Symbol symT(T, SIZE(T), 10);
	const Symbol symU(U, SIZE(U), 10);
	const Symbol symV(V, SIZE(V), 10);
	const Symbol symW(W, SIZE(W), 10);
	const Symbol symX(X, SIZE(X), 10);
	//const Symbol symY(Y, SIZE(Y), 10);
	//const Symbol symZ(Z, SIZE(Z), 10);

}
